import svgwrite
import os
import pandas as pd

df = pd.read_csv('result_tables/total_table.csv', sep=';')
ranked_df = df.copy()
ranked_df["–†–∞–Ω–≥ —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏"] = df["–†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫ –Ω–∞—Å–µ–ª–µ–Ω–∏—è"].rank(ascending=False, method="min")
ranked_df["–†–∞–Ω–≥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è"] = df["–î–æ–ª—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è —Å –≤—ã—Å—à–∏–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º, %"].rank(ascending=False, method="min")
ranked_df["–†–∞–Ω–≥ —Ñ–∏–Ω–∞–Ω—Å–æ–≤"] = df["–†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π –±–∞–ª–ª —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è"].rank(ascending=False, method="min")
ranked_df["–†–∞–Ω–≥ –ó–û–ñ"] = df["–†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π –±–∞–ª–ª –ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –ó–û–ñ"].rank(ascending=False, method="min")
ranked_df["–†–∞–Ω–≥ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è"] = df["–û–±—ä–µ–º –≤—ã–±—Ä–æ—Å–æ–≤ –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤, —Ç—ã—Å. —Ç–æ–Ω–Ω"].rank(ascending=True, method="min")
ranked_df["–†–∞–Ω–≥ –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã"] = df["–£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã –Ω–∞—Å–µ–ª–µ–Ω–∏—è –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 15 –ª–µ—Ç –∏ —Å—Ç–∞—Ä—à–µ, %"].rank(ascending=True, method="min")

def get_region_info(region_name):
    region_data = ranked_df[ranked_df["–†–µ–≥–∏–æ–Ω"] == region_name]
    region_name = region_name.title().replace('–ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π –û–∫—Ä—É–≥', '–∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥').replace('–ö—Ä–∞–π', '–∫—Ä–∞–π').replace('–û–±–ª–∞—Å—Ç—å', '–æ–±–ª–∞—Å—Ç—å')
    
    if region_data.empty:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
    
    info = f"""
    {region_name}
    üöº –†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å: {region_data["–†–æ–∂–¥–∞–µ–º–æ—Å—Ç—å –Ω–∞ 1000 —á–µ–ª–æ–≤–µ–∫ –Ω–∞—Å–µ–ª–µ–Ω–∏—è"].values[0]}  #{int(region_data["–†–∞–Ω–≥ —Ä–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏"].values[0])}
    üéì –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {region_data["–î–æ–ª—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è —Å –≤—ã—Å—à–∏–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º, %"].values[0]}%  #{int(region_data["–†–∞–Ω–≥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è"].values[0])}
    üí∞ –§–∏–Ω–∞–Ω—Å—ã: {region_data["–†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π –±–∞–ª–ª —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è"].values[0]}  #{int(region_data["–†–∞–Ω–≥ —Ñ–∏–Ω–∞–Ω—Å–æ–≤"].values[0])}
    üèãÔ∏è‚Äç‚ôÇÔ∏è –ó–û–ñ: {region_data["–†–µ–π—Ç–∏–Ω–≥–æ–≤—ã–π –±–∞–ª–ª –ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–∏—è –ó–û–ñ"].values[0]}  #{int(region_data["–†–∞–Ω–≥ –ó–û–ñ"].values[0])}
    üåç –ó–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–µ: {region_data["–û–±—ä–µ–º –≤—ã–±—Ä–æ—Å–æ–≤ –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤, —Ç—ã—Å. —Ç–æ–Ω–Ω"].values[0]}  #{int(region_data["–†–∞–Ω–≥ –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è"].values[0])}
    üìâ –ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞: {region_data["–£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã –Ω–∞—Å–µ–ª–µ–Ω–∏—è –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 15 –ª–µ—Ç –∏ —Å—Ç–∞—Ä—à–µ, %"].values[0]}%  #{int(region_data["–†–∞–Ω–≥ –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã"].values[0])}
    """
    return info.strip()

pos_df = pd.read_csv('result_tables/regions_positions.csv', sep=';')
region_positions = {row["–†–µ–≥–∏–æ–Ω"]: (row["–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X"], row["–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y"]) for _, row in pos_df.iterrows()}

x_coords = [x for x, y in region_positions.values()]
y_coords = [y for x, y in region_positions.values()]
min_x, max_x = min(x_coords), max(x_coords)
min_y, max_y = min(y_coords), max(y_coords)
width, height = max_x - min_x, max_y - min_y

output_file = "regions_emojis.svg"
dwg = svgwrite.Drawing(output_file, profile="tiny", viewBox="-50 -50 1800 1100")

for region, (x, y) in region_positions.items():
    emoji_path = os.path.join("region_emojis", f"{region}.svg")
    group = dwg.g()
    group.add(dwg.image(emoji_path, insert=(x, y)))
    group.add(svgwrite.base.Title(get_region_info(region)))
    dwg.add(group)

dwg.save()

